2012-01-23  MIYAMUKO Katsuyuki

	* (http-*): server に完全な URL を指定可能にした (Gauche 非互換)
	- 以下の 4 つはすべて同じである
	(http-get "https://www.google.co.jp/search?q=xyzzy" nil)
	(http-get "https://www.google.co.jp/search" '(nil (q "xyzzy")))
	(http-get "https://www.google.co.jp" '("/search" (q "xyzzy")))
	(http-get "www.google.co.jp" '("/search" (q "xyzzy")) :secure t)

	* レスポンスに Content-Length があれば、バッファサイズ分一気に読み込むことで
	イベントの発生回数を減らして高速化

2012-01-21  MIYAMUKO Katsuyuki

	* Gauche 互換 API で非同期処理を追加

2012-01-20  MIYAMUKO Katsuyuki

	* multipart/form-data 周りを修正
	- ファイルの中身を全部送信していなかったのを修正
	- (("key1" "value1") ("key2" :value "value2")) がエラーになっていたのを修正
	- ファイルの存在チェックをするようにした
	- boundary に記号を含めないようにした
	  - 記号ありだとエラーになるアップローダがあった
	- Content-Transfer-Encoding と Content-Type は指定された場合のみ
	  生成するようにした
	  - Content-Transfer-Encoding: binary を付けるとファイルにゴミが入る
	    アップローダがあった

	* (http-post, http-put, http-compose-form-data): form-data に対応
	(http-put "localhost:3000" "/upload"
	          '(("upload" :file "logo.png" :content-type "image/png")))
	content-transfer-encoding は binary のみサポート

2012-01-19  MIYAMUKO Katsuyuki

	* Gauche 互換 API をさらにちょこっと作成
	- http-compose-query
	- proxy, no-redirect 対応

	(http-get "www.google.co.jp"
	          '("/search" (q "xyzzy 読み方") (num 20) (ie "utf-8") (oe "shift_jis"))
	          :request-encoding *encoding-utf8n*)
	(http-compose-query "/search"
	                    '((q "xyzzy 読み方") (num 20) (ie "utf-8") (oe "shift_jis"))
	                    *encoding-utf8n*)

2012-01-18  MIYAMUKO Katsuyuki

	* Gauche 互換 API をちょこっと作成

	* 一般的なユーティリティを http-client/base に移動

	* とりあえず Node.js ほぼ互換 API を作成

2012-01-17  MIYAMUKO Katsuyuki

	* http-client 作成開始

